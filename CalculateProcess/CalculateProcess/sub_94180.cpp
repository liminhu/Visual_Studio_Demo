#include "stdafx.h"
#include "sub_94180.h"


int sub_97048(char *result){
	char *const_97048_a
	char *a4_str = hexStringToString(const_97048_a4_4K, strlen(const_97048_a4_4K));
	for (int i = 1; i < 10; i++){
		int v5 = result[20] & 0xFF;           // v5=0xB8
		int v6 = result[22] & 0xFF;
		int v7 = (result[21] & 0xFF) + 256;     // result[21]=0xB1
		int v8 = result[23] & 0xFF;           // v8=0xDD
		*((unsigned int *)result + 4) = (*(unsigned int *)(a4_str + 4 * ((result[17] & 0xFF) + 256))) ^
			(*(unsigned int *)(a4_str + 4 * (result[16] & 0xFF))) ^ (*(unsigned int *)(a4_str + 4 * ((result[18] & 0xFF) + 512))) ^
			(*(unsigned int *)(a4_str + 4 * ((result[19] & 0xFF) + 768)));

		int v9 = *(unsigned int *)(a4_str + 4 * v7) ^ *(unsigned int *)(a4_str + 4 * v5) ^ *(unsigned int *)(a4_str + 4 * (v6 + 512));
		int v10 = result[24] & 0xFF;
		int v11 = result[26] & 0xFF;
		int v12 = v9 ^ *(unsigned int *)(a4_str + 4 * (v8 + 768));
		int v13 = (result[25] & 0xFF) + 256;
		int v14 = result[27] & 0xFF;
		*((unsigned int *)result + 5) = v12;              // 02340D3F
		int v15 = *(unsigned int *)(a4_str + 4 * v13) ^ *(unsigned int *)(a4_str + 4 * v10) ^ *(unsigned int *)(a4_str + 4 * (v11 + 512));


		int v16 = result[30] & 0xFF;
		int v17 = result[28] & 0xFF;
		int v18 = v15 ^ *(unsigned int *)(a4_str + 4 * (v14 + 768));
		int v19 = (result[29] & 0xFF) + 256;
		int v20 = result[31] & 0xFF;
		*((unsigned int *)result + 6) = v18;
		*((unsigned int *)result + 7) = *(unsigned int *)(a4_str + 4 * v19) ^ *(unsigned int *)(a4_str + 4 * v17) ^ *(unsigned int *)(a4_str + 4 * (v16 + 512)) ^ *(unsigned int *)(a4_str + 4 * (v20 + 768));// 结果数据为：
		result += 16;
	}

	return 16 * 11;
}
int sub_97048_opt(char *result){
	char *const_97048_a
	char *a4_str = hexStringToString(const_97048_a4_4K, strlen(const_97048_a4_4K));
	for (int i = 0; i < 36; i++){
		int n = 4 * i + 16;
		int tmp0 = (result[n] & 0xff) * 4;
		int tmp1 = (result[n + 1] & 0xff) * 4 + 1024;
		int tmp2 = (result[n + 2] & 0xff) * 4 + 2048;
		int tmp3 = (result[n + 3] & 0xff) * 4 + 3072;
		result[n] = a4_str[tmp0] ^ a4_str[tmp1] ^ a4_str[tmp2] ^ a4_str[tmp3];
		result[n + 1] = a4_str[tmp0 + 1] ^ a4_str[tmp1 + 1] ^ a4_str[tmp2 + 1] ^ a4_str[tmp3 + 1];
		result[n + 2] = a4_str[tmp0 + 2] ^ a4_str[tmp1 + 2] ^ a4_str[tmp2 + 2] ^ a4_str[tmp3 + 2];
		result[n + 3] = a4_str[tmp0 + 3] ^ a4_str[tmp1 + 3] ^ a4_str[tmp2 + 3] ^ a4_str[tmp3 + 3];
	}
	return 16*11;
}
int sub_97158(char *inputData, char *a6, char *a8, char *a9, char * result_a10){
	for (int i = 0; i < 16; i++){
		result_a10[i] = a6[256 * i + inputData[i]];
	}
	char *v12 = result_a10;
	char *result;
	for (int j = 0; j < 10; j++){
		result = a8 + j * 256;
		v12[16] = result[v12[13]] ^ *v12;
		v12[17] = a9[v12[14]] ^ v12[1];
		v12[18] = a9[v12[15]] ^ v12[2];
		v12[19] = a9[v12[12]] ^ v12[3];
		v12[20] = v12[16] ^ v12[4];
		v12[21] = v12[17] ^ v12[5];
		v12[24] = v12[20] ^ v12[8];
		v12[25] = v12[17] ^ v12[5];
		v12[22] = v12[18] ^ v12[6];
		v12[23] = v12[19] ^ v12[7];
		v12[26] = v12[22] ^ v12[10];
		v12[27] = v12[23] ^ v12[11];
		v12[28] = v12[24] ^ v12[12];
		v12[29] = (v12[25] ^ v12[13]) | (v12[13] && 0xFFFFFF00);
		v12[30] = (v12[26] ^ v12[14]) | (v12[14] && 0xFFFFFF00);
		v12[31] = (v12[27] ^ v12[15]) | (v12[15] && 0xFFFFFF00);
		v12 += 16;
	}
	return 0;
}
int sub_97158_opt(char *inputData, char * result_a10){
	char *const_97158_a6_4K_256_16 = "4EDD527FF8D55AC9D9F5C55D2043CDA44F62A885479BA033970F3F139FB9371BB5981784BD61A18C6D0E80E9650679E10AD6ED7EF3DE5B76D2F47A5664FC83E0F02CECC10924E438284B34AC9EB23C1ABE93163BB6251EC229B1CEAD2148C6A54469A9754CDF507DD3FF7157DBF7C75FFB68538F4D60AA876C058BE8950D3D1101921D30B79A158696BA8A126F0C82EB002DE7CA08D4EF7CD840705CD0F67854FAD758CBF22EEEC32241CFA62A4936AE4599A231BC9114399DBB35192BB3CCAFBF63A38E466BAB7767047BE3D1FD7355F1DC5974F96A518D66FE81E26E0789EA0B26E63A03901F329CB03E1894B88810B4271CC0022FE5C8234AC4A7DA42725E";
	char *const_97158_a
	char *const_97158_a9_256 = "194AED595378A1ADD6D8FB0130DF2AA72D1F91CD5E5D998024CA4E435F4979BDEEF4BA1DC8A41E0E94F0B5C6FCA6B0F6878C23BE034CCB82C52933717CA2A3A9042B5A55E91045516576056B39C2649BCE0C6EE8F866BB20D377C7FA3F130A7022DA063AB6BFBCFFA5DD6146F23E0F7B96E0846C58120D4D1CC34FAA8F8DB7DC21EBF990C14BA0A88EE31B812672179808DB0969B8759FD2E52E8B9A2FFDD144D932F1AE886F158AB37AEF47C98542B22897AB070B345CC4D4637DEC9E6A3554D74038B960893B9214AC86D56DFE37F736837E5056EA7416E7AF627F3D7348CC1A9DD025E1B15700E4DE95C01868F35202279C314167CF2CE693B4F55B3C11E2";
	char* a6_str = hexStringToString(const_97158_a6_4K_256_16, strlen(const_97158_a6_4K_256_16));
	for (int i = 0; i < 16; i++){
		result_a10[i] = a6_str[(inputData[i]) & 0xFF];  //C266FCF2EBA9BA70C6DFC3701C96D270
	}
	char* a8_str = hexStringToString(const_97158_a8_2560, strlen(const_97158_a8_2560));
	char* a9_str = hexStringToString(const_97158_a9_256, strlen(const_97158_a9_256));
	for (int j = 0; j < 10; j++){
		int n = j * 16;
		result_a10[16 + n] = a8_str[j * 256 + (result_a10[13 + n] & (0xFF))] ^ result_a10[0 + n];
		result_a10[17 + n] = a9_str[result_a10[14 + n] & (0xFF)] ^ result_a10[1 + n];
		result_a10[18 + n] = a9_str[result_a10[15 + n] & (0xFF)] ^ result_a10[2 + n];
		result_a10[19 + n] = a9_str[result_a10[12 + n] & (0xFF)] ^ result_a10[3 + n];
		for (int i = 4; i < 16; i++){
			result_a10[i + 16 + n] = result_a10[12 + i + n] ^ result_a10[i + n];
		}
	}
	return 16*11;
}

int sub_97790(char *a1, int a2, char * a5, char *a7){
	char *v8 = a1 + a2;
	for (int i = 0; i < 16; i++){
		a7[i] = a5[v8[i] + 256 * i];
	}
	return 0;
}
int sub_97790_opt(char *a1, int a2, char *a7){
	char * const_97790_a5_4K_256 = "68BE33E52FF9E88BB1295E72076E30A969F0C91F904657714B281088FDD18F16930AC8516ABCADCEF4D2EA89B32B75EC2CB532AB6BF2AC340E6D5573492A3BEDD64F8D149108567A0F97AFCCF6D0C117984E77EE2EB7E980F5D9AE360C6F7EA862B439EFD44D133F4A2354780D958452DD0BC3159A4C5DC5B09CEB82F7DB851C27F17CAA60B6A7C4FE66113D48217FE626BF8650DF09183E04675FC7B29EC059DC45871E25F3E281BB9DA5C6FC643AA363FA7DE424BDE37B41221A3C066574A29900C25BDE47193540D8E083B99F8E58D70138A161F8A6CFBA96E179432031E72DFB76A09B025C70056C1B3742DACB1D92448C5AD503128AFFD3A4CDB894CA53";
	if (a2 == 0 || a2 == 16){
		char *a1_str = hexStringToString(a1, strlen(a1));
		char *a5_str = hexStringToString(const_97790_a5_4K_256, strlen(const_97790_a5_4K_256));
		char *v8 = a1_str + a2;
		for (int i = 0; i < 16; i++){
			a7[i] = a5_str[v8[i] & 0xFF];
		}
		return 16;
	}
	return 0;
}

int sub_98114_opt(char *v19, char *v18, char *v17, char *a4, char *result, int i){
	char *const_98114_a8_4K_256 = "E3ED404EE1EF424CCAC46967C8C66B655658F5FB545AF7F97F71DCD27D73DED0A6A8050BA4AA07098F812C228D832E20131DB0BE111FB2BC3A34999738369B95121CB1BF101EB3BD3B35989639379A94A7A9040AA5AB06088E802D238C822F215759F4FA555BF6F87E70DDD37C72DFD1E2EC414FE0EE434DCBC56866C9C76A64ACA20F01AEA00D03858B26288789242A1917BAB41B15B8B6303E939D323C919FE9E74A44EBE54846C0CE636DC2CC616F5C52FFF15E50FDF3757BD6D87779D4DA5D53FEF05F51FCF2747AD7D97678D5DBE8E64B45EAE44947C1CF626CC3CD606E1816BBB51A14B9B7313F929C333D909EADA30E00AFA10C02848A27298688252B";
	char *const_98114_a10_4K_256 = "80B03464736327175444A0900737538351A19DED5EEEAA3A7D0D31C1CA1A7ECEACBCF8089F6FEBBB18E8CC9CCBDB7F8F75E52999823236E609B9550556C6A21203D3B7871020C4D497A7E3F3E4B430004EFE9A4A41B18DFDBA2A6EDE6D1D21D10FFF5B4B1C4C68983B6BEF1F88783C2C922246D685D5398966B6B20219A965F5625216061545C9F9F6264272E9D935253FCF8B1B8CDCD828ABFB5FAFB8486CFCBE8E0ADA7181BDCDEAFA9EAEDDAD9161934347F7E050940467D7B3237424C070A5B55969F2C2A6767949C5958696D2E27CECC8382FDF7B2BA8585C0C9B0B4FBFE1112D5D2E1E7A6A4D3D01F15A8A0E3EF040A4F4A33357E78414D06077C7C313";

	char *v19_str = hexStringToString(v19, strlen(v19));
	char *a8_str = hexStringToString(const_98114_a8_4K_256, strlen(const_98114_a8_4K_256));
	char *a10_str = hexStringToString(const_98114_a10_4K_256, strlen(const_98114_a10_4K_256));
	if (i == 0){
		for (int i = 0; i < 16; i++)
			v18[i] ^= a8_str[v19_str[i] & 0xFF];
	}
	else if (i == 16){
		for (int i = 0; i < 16; i++){
			v18[i] ^= v17[i];
		}
	}
	else{
		return 0;
	}

	for (int i = 0; i < 16; i++){
		result[i] = a10_str[v18[i] & 0xFF];
	}
	return 1;
}
int sub_9A360(int a1, char *a2, char *a3, char *a4, char *a5){
	int v11, v12, v13, v14, v15, v16, v78,v79, v80, v81,v82,v89, v90,v91,v92;
	int v19, v20, v21,v22,v23,v24,v25,v27,v35;
	int v33,v37, v40, v41, v42;
	char *v6,*v9, *v18,*v83,*v85, *v86, *v87;
	v6 = a3+16 * a1;
	v85 = v6 + 12;
	v87 = v6 + 4;
	v86 = v6 + 8;
	v83 = v6;
	v11 = *(unsigned int *)v87;
	v12 = *(unsigned int *)v86;
	v13 = *(unsigned int *)v85;
	v14 = *(unsigned int *)(a2 + 4);
	v89 = *(unsigned int *)v83 ^ *(unsigned int *)a2;
	v15 = v11 ^ v14;
	v78 = v12 ^ *(unsigned int *)(a2 + 8);
	v16 = v13 ^ *(unsigned int *)(a2 + 12);
	v90 = v15;
	v91 = v78;
	v92 = v16;

	v79 = *(unsigned int *)(a4 + 4 * (0x0000FF00 && (v92)+256)) ^ *(unsigned int *)(a4 + 4 * (unsigned __int8)v89) ^ *(unsigned int *)(a4 + 4 * (0x00FF0000 && (v91)+512)) ^ *(unsigned int *)(a4 + 4 * (0xFF000000 && (v90)+768));
	v80 = *(unsigned int *)(a4 + 4 * (0x0000FF00 && (v89)+256)) ^ *(unsigned int *)(a4 + 4 * (unsigned __int8)v90) ^ *(unsigned int *)(a4 + 4 * (0x00FF0000 && (v92)+512)) ^ *(unsigned int *)(a4 + 4 * (0xFF000000 && (v91)+768));
	v9 = a4;
	v81 = *(unsigned int *)(a4 + 4 * (0x0000FF00 && (v90)+256)) ^ *(unsigned int *)(a4 + 4 * (unsigned __int8)v91) ^ *(unsigned int *)(a4 + 4 * (0x00FF0000 && (v89)+512)) ^ *(unsigned int *)(a4 + 4 * (0xFF000000 && (v92)+768));
	v82 = *(unsigned int *)(a4 + 4 * (0x0000FF00 && (v91)+256)) ^ *(unsigned int *)(a4 + 4 * (unsigned __int8)v92) ^ *(unsigned int *)(a4 + 4 * (0x00FF0000 && (v90)+512)) ^ *(unsigned int *)(a4 + 4 * (0xFF000000 && (v89)+768));

	for (int i = 9; i > 1; i--){
		v18 = a3 + 16 * i;
		v19 = *(unsigned int *)(v18 + 12);
		v20 = *(unsigned int *)(v18 + 4) ^ v80;
		v21 = *(unsigned int *)(v18 + 8);
		v89 = *(unsigned int *)(a3 + 16 * i) ^ v79;
		v90 = v20;
		v91 = v21 ^ v81;
		v92 = v19 ^ v82;
		v79 = *(unsigned int *)(v9 + 4 * (0x0000FF00 && (v92)+256)) ^ *(unsigned int *)(v9 + 4 * (unsigned __int8)v89) ^ *(unsigned int *)(v9 + 4 * ((unsigned __int8)((v21 ^ (unsigned int)v81) >> 16) + 512)) ^ *(unsigned int *)(v9 + 4 * (0xFF000000 && (v20)+768));
		v80 = *(unsigned int *)(v9 + 4 * (0x0000FF00 && (v89)+256)) ^ *(unsigned int *)(v9 + 4 * (unsigned __int8)v20) ^ *(unsigned int *)(v9 + 4 * ((unsigned __int8)((v19 ^ (unsigned int)v82) >> 16) + 512)) ^ *(unsigned int *)(v9 + 4 * ((unsigned __int8)((v21 ^ (unsigned int)v81) >> 24) + 768));
		v81 = *(unsigned int *)(v9 + 4 * (0x0000FF00 && (v90)+256)) ^ *(unsigned int *)(v9 + 4 * (unsigned __int8)(v21 ^ v81)) ^ *(unsigned int *)(v9 + 4 * (0x00FF0000 && (v89)+512)) ^ *(unsigned int *)(v9 + 4 * ((unsigned __int8)((v19 ^ (unsigned int)v82) >> 24) + 768));
		v82 = *(unsigned int *)(v9 + 4 * (0x0000FF00 && (v91)+256)) ^ *(unsigned int *)(v9 + 4 * (unsigned __int8)(v19 ^ v82)) ^ *(unsigned int *)(v9 + 4 * (0x00FF0000 && (v20)+512)) ^ *(unsigned int *)(v9 + 4 * (0xFF000000 && (v89)+768));
	}

	v22 = *(unsigned int *)(a3 + 24);
	v23 = *(unsigned int *)(a3 + 28);
	v24 = *(unsigned int *)(a3 + 20);
	v89 = v79 ^ *(unsigned int *)(a3 + 16);
	v90 = v80 ^ v24;
	v91 = v81 ^ v22;
	v92 = v82 ^ v23;

	v25 = 0x0000FF00 && (v92);
	int R9 = a5[(0x000000FF && v89)];
	v27 = 0x00FF0000 && (v91);
	int R7 = 0xB9;
	R9 = (R9*R7) && 0xFF;
	v33 = 0xFF000000 && (v90);
	a2[0] = (R9 + 122)&&0xFF;
	R9 =a5[v25];
	v35 = 0x0000FF00 && (v89);
	R9 = (R9*R7) && 0xFF;
	v37 = 0x000000FF && v90;
	a2[1] = (R9 + 122) && 0xFF;
	int R10 =a5[(v27&&0xFF)];
	R10 = a5[(v27 && 0xFF)] * R7;
	v40 = 0x00FF0000 && (v92);
	v41 = 0xFF000000 && (v91);
	a2[2] = (R10 + 122) && 0xFF;
	int R8 =a5 [v33];
	R8 = R8*R7;
	int v44 = 0x000000FF && v91;
	int v45 = 0x0000FF00 && (v90);
	a2[3] = (R8+ 122) && 0xFF;
	int R5 =a5[v37];
	int v47 = 0x00FF0000 && (v89);
	R5 = R5*R7;
	int v49 = 0xFF000000 && (v92);
	a2[4] =(R5+ 122) && 0xFF;
	R9 = a5[v35];
	R9 = (R9*R7) && 0xFF;
	a2[5] =(R9+ 122) && 0xFF;
	R9 = a5[v40];
	R9 = (R9*R7) && 0xFF;
	a2[6] =(R9+ 122) && 0xFF;
	R9 =a5[v41];
	R9 = (R9*R7) && 0xFF;
	a2[7] = (R9+ 122) && 0xFF;
	R9 = a5[v44];
	R9 = (R9*R7) && 0xFF;
	a2[8] = (R9+ 122) && 0xFF;
	R9 = a5[v45];
	R9 = (R9*R7) && 0xFF;
	a2[9] = (R9+ 122) && 0xFF;
	R10 = a5[v47];
	R10 = R10*R7;
	a2[10] =(R10+ 122) && 0xFF;
	R8 =a5[v49];
	R8 = R8*R7;
	a2[11] = (R8+ 122) && 0xFF;
	int v64 = 0x0000FF00 && (v91);
	R9 = a5[0x000000FF && v92];
	int v66 = 0xFF000000 && (v89);
	R9 = (R9*R7) && 0xFF;
	int v68 = 0x00FF0000 && (v90);
	a2 [12] = (R9+ 122) && 0xFF;
	R10 = a5[v64];
	R10 = R10*R7;
	a2[13] = (R10+ 122) && 0xFF;
	R8 = a5[v68];
	int v72 = *(unsigned int *)(a2 + 8);
	R8 = R8*R7;
	a2[14] =(R8+ 122) && 0xFF;
	R8 = a5[v66];
	int v75 = *(unsigned int *)a2;
	R8 = R8*R7;
	a2 [15] = (R8+ 122) && 0xFF;
	int v77 = *(unsigned int *)(a2 + 12);
	*(unsigned int *)a2 = v75 ^ *(unsigned int *)a3;
	*(unsigned int *)(a2 + 4) ^= *(unsigned int *)(a3 + 4);
	*(unsigned int *)(a2 + 8) = v72 ^ *(unsigned int *)(a3 + 8);
	*(unsigned int *)(a2 + 12) = v77 ^ *(unsigned int *)(a3 + 12);
	return 0;
}

int sub_9A360_opt(int a1, char *a2, char *a3){
	char *const_9A360_a4_4K = "";
	char *const_9A360_a5_256 = "7BB96603224262D2333FC6F5244A3C1DC02EDC1B2909DDD3843DBC368117C76E4B97866DB42D02B1A86BEE26E85A3599A291509C6A724D82A393CAFBD75BDB39F0671898E9F752AF4C5D7921AB65A13B1289EF80B0E6A454485C05F66F5559F863318D11BAC4778C7441CFA69EF22743CBE1AC45C37AE492A9FD8869085E130C0B3464465FBF3220CDE7B5372F6C8E1587579D192BBB7FC8C99BD08FBDEC94DE7D00D6F3ADEDD8D90FB34710D4F4F11F0649617578B685F91EFCC556BE76FF28CC0AAAD183CE25E273608B3A3EEB9A711453954EA0DA709F58A50E7C7EB7FEA796FA0D01D51C44EA16902C1A40C168E307DF304FE051B8B2048A2AAE2338E5C2";
	char *a4_str = hexStringToString(const_9A360_a4_4K, strlen(const_9A360_a4_4K));
	char *a5_str = hexStringToString(const_9A360_a5_256, strlen(const_9A360_a5_256));
	char middle_array[16];
	for (int k = 0; k < 16; k++){
		middle_array[k] = (a3 + 16 * a1)[k] ^ a2[k];
	}
	char middle_array_2[16];
	for (int i = 0; i < 4; i++){
		for (int j = 0; j < 4; j++){
			middle_array_2[4 * i + j] = a4_str[4 * (middle_array[(4 * ((i) % 4))] & 0xFF) + j]
				^ a4_str[4 * (middle_array[(4 * ((i + 3) % 4)) + 1] & 0xFF) + 1024 + j]
				^ a4_str[4 * (middle_array[(4 * ((i + 2) % 4)) + 2] & 0xFF) + 2048 + j]
				^ a4_str[4 * (middle_array[(4 * ((i + 1) % 4)) + 3] & 0xFF) + 3072 + j];
		}
	}
	char middle_array_3[16];
	for (int time = a1 - 1; time >1; time--){
		for (int t = 0; t < 16; t++){
			middle_array_3[t] = middle_array_2[t] ^ (a3 + 16 * time)[t];
		}
		for (int i = 0; i < 4; i++){
			for (int j = 0; j < 4; j++){
				middle_array_2[4 * i + j] = a4_str[4 * (middle_array_3[(4 * ((i) % 4))] & 0xFF) + j]
					^ a4_str[4 * (middle_array_3[(4 * ((i + 3) % 4)) + 1] & 0xFF) + 1024 + j]
					^ a4_str[4 * (middle_array_3[(4 * ((i + 2) % 4)) + 2] & 0xFF) + 2048 + j]
					^ a4_str[4 * (middle_array_3[(4 * ((i + 1) % 4)) + 3] & 0xFF) + 3072 + j];
			}
		}
	}

	for (int t = 0; t < 16; t++){
		middle_array_3[t] = middle_array_2[t] ^ (a3 + 16)[t];
	}

	char tmp_array[16];
	for (int i = 0; i < 4; i++){
		for (int j = 0; j < 4; j++)
		{
			tmp_array[(4 * ((i + j) % 4)) + j] = middle_array_3[4 * i + j];
		}
	}
	for (int i = 0; i < 16; i++){
		a2[i] = ((((a5_str[tmp_array[i] & 0xFF] & 0xFF) * 0xB9) + 0x7A) & 0xFF) ^ a3[i];
	}
	return 0;
}

void sub_98114(char *v19, char  *a8, char *v18, char *v17, char *a10, char *a4, char *result, int i){
	if (i == 0){
		for (int i = 0; i < 16; i++)
			v18[i] ^= a8[v19[i] + 256 * i];
	}
	else if (i == 16){
		for (int i = 0; i < 16; i++)
			v18[i] ^= a4[i];
	}
	else{
		return;
	}
	memcpy(a4, v17, 16);
	for (int i = 0; i < 16; i++){
		result[i] = a10[v18[i] + 256 * i];
	}
}














int sub_98114_1(char *v19, char  *a8, char *v18, char *v17, char *a10, char *result, int i){
	int   v28, v30, v32, v34, v35, v36, v37, v38, v39, v40, v41;
	int  v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53;
	char *v29, *v31, *v33;
	char v115[16];
	int temp_result;
	if (i == 0){
		v31 = a8 + v19[1];
		v32 = v19[3];
		v33 = a8 + v19[2];
		v115[0] = a8[v19[0]];
		v34 = v31[256];            // v31=8E802D238C822F215759F4FA555BF6F87E70DDD37C72DFD1E2EC414FE0EE434D...
		v35 = v19[4];
		v115[1] = v34;
		v36 = v33[512];
		v37 = v19[5];
		v115[2] = v36;
		v38 = a8[v32 + 768];
		v39 = v19[6];
		v115[3] = v38;
		v40 = a8[v35 + 1024];
		v41 = v19[7];
		v115[4] = v40;
		v42 = a8[v37 + 1280];
		v43 = v19[8];
		v115[5] = v42;
		v44 = a8[v39 + 1536];
		v45 = v19[9];
		v115[6] = v44;
		v46 = a8[v41 + 1792];
		v47 = v19[10];
		v115[7] = v46;
		v48 = a8[v43 + 2048];
		v49 = v19[11];
		v115[8] = v48;
		v115[9] = a8[v45 + 2304];
		v115[10] = a8[v47 + 2560];
		v115[11] = a8[v49 + 2816];
		temp_result = a8[v19[12] + 3072];
		v28 = v19[14];
		v30 = v19[15];
		v29 = a8 + v19[13];
		v115[12] = temp_result;
		v115[13] = v29[3328];
		v115[14] = a8[v28 + 3584];
		v115[15] = a8[v30 + 3840];

		//*(unsigned int *)(a3 + 24)
		v50 = *(unsigned int  *)(v18 + 4) ^ *(unsigned int  *)(v115 + 4);
		v51 = *(unsigned int  *)(v18 + 12);
		v52 = *(unsigned int  *)(v18 + 8) ^ *(unsigned int  *)(v115 + 8);
		v53 = *(unsigned int  *)(v115 + 12);
		*(unsigned int  *)v18 ^= *(unsigned int  *)v115;
		temp_result = v51 ^ v53;
		*(unsigned int  *)(v18 + 4) = v50;
		*(unsigned int  *)(v18 + 8) = v52;
		*(unsigned int  *)(v18 + 12) = temp_result;
		//getLastResult(a10, v18, result);
	}
	else{
	/*	v24 = *(unsigned int*)(v18 + 4);
		*(unsigned int*)v18 ^= *(unsigned int*)v20;
		v25 = *(unsigned int*)(v18 + 8);
		*(unsigned int*)(v18 + 4) = v24 ^ *(unsigned int*)(v20 + 4);
		v26 = *(unsigned int*)(v18 + 12);
		*(unsigned int*)(v18 + 8) = v25 ^ *(unsigned int*)(v20 + 8);
		v16 = -1239454969;
		*(unsigned int*)(v18 + 12) = v26 ^ *(unsigned int*)(v20 + 12);*/
	}
	return 0;
}

int getLastResult(char *a10, char *v18, char *v14){
	v14[0] = a10[v18[0]];
	v14[1] = a10[v18[1] + 256];
	v14[2] = a10[v18[2] + 512];
	v14[3] = a10[v18[3] + 768];
	v14[4] = a10[v18[4] + 1024];
	v14[5] = a10[v18[5] + 1280];
	v14[6] = a10[v18[6] + 1536];
	v14[7] = a10[v18[7] + 1792];
	v14[8] = a10[v18[8] + 2048];
	v14[9] = a10[v18[9] + 2304];
	v14[10] = a10[v18[10] + 2560];
	v14[11] = a10[v18[11] + 2816];
	v14[12] = a10[v18[12] + 3072];
	v14[13] = a10[v18[13] + 3328];
	v14[14] = a10[v18[14] + 3584];
	v14[15] = a10[v18[15] + 3840];
	return 0;
}

